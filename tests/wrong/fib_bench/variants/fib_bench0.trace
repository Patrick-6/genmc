Error detected: Safety violation!
Event (3, 2) in graph:
Thread 0:
	(0, 0): B
	(0, 1): TC [forks 1]
	(0, 2): TC [forks 2]
	(0, 3): TC [forks 3]
	(0, 4): E
Thread 1:
	(1, 0): B
	(1, 1): Rrlx [INIT]
	(1, 2): Rrlx [INIT]
	(1, 3): Wrlx 2
	(1, 4): Rrlx [(1, 3)]
	(1, 5): Rrlx [(2, 3)]
	(1, 6): Wrlx 5
	(1, 7): Rrlx [(1, 6)]
	(1, 8): Rrlx [(2, 6)]
	(1, 9): Wrlx 13
	(1, 10): Rrlx [(1, 9)]
	(1, 11): Rrlx [(2, 9)]
	(1, 12): Wrlx 34
	(1, 13): Rrlx [(1, 12)]
	(1, 14): Rrlx [(2, 12)]
	(1, 15): Wrlx 89
	(1, 16): E
Thread 2:
	(2, 0): B
	(2, 1): Rrlx [(1, 3)]
	(2, 2): Rrlx [INIT]
	(2, 3): Wrlx 3
	(2, 4): Rrlx [(1, 6)]
	(2, 5): Rrlx [(2, 3)]
	(2, 6): Wrlx 8
	(2, 7): Rrlx [(1, 9)]
	(2, 8): Rrlx [(2, 6)]
	(2, 9): Wrlx 21
	(2, 10): Rrlx [(1, 12)]
	(2, 11): Rrlx [(2, 9)]
	(2, 12): Wrlx 55
	(2, 13): Rrlx [(1, 15)]
	(2, 14): Rrlx [(2, 12)]
	(2, 15): Wrlx 144
	(2, 16): E
Thread 3:
	(3, 0): B
	(3, 1): Rrlx [INIT]
	(3, 2): Rrlx [(2, 15)]
Thread sizes:
	5 17 17 3 

Trace to (3, 2):
[main] fib_bench0.c: 11: pthread_create(&id1, NULL, t1, NULL);
[main] fib_bench0.c: 12: pthread_create(&id2, NULL, t2, NULL);
[main] fib_bench0.c: 13: pthread_create(&id3, NULL, t3, NULL);
[t3] fib_bench.c: 28: if (atomic_load_explicit(&i, memory_order_relaxed) >= 144 ||
[t1] fib_bench.c: 8: for (int k = 0; k < NUM; k++) {
[t1] fib_bench.c: 9: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t1] fib_bench.c: 10: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t2] fib_bench.c: 18: for (int k = 0; k < NUM; k++) {
[t2] fib_bench.c: 19: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t2] fib_bench.c: 20: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t2] fib_bench.c: 21: atomic_store_explicit(&j, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 12: }
[t1] fib_bench.c: 8: for (int k = 0; k < NUM; k++) {
[t1] fib_bench.c: 9: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t1] fib_bench.c: 10: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t2] fib_bench.c: 22: }
[t2] fib_bench.c: 18: for (int k = 0; k < NUM; k++) {
[t2] fib_bench.c: 19: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t2] fib_bench.c: 20: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t2] fib_bench.c: 21: atomic_store_explicit(&j, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 12: }
[t1] fib_bench.c: 8: for (int k = 0; k < NUM; k++) {
[t1] fib_bench.c: 9: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t1] fib_bench.c: 10: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t2] fib_bench.c: 22: }
[t2] fib_bench.c: 18: for (int k = 0; k < NUM; k++) {
[t2] fib_bench.c: 19: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t2] fib_bench.c: 20: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t2] fib_bench.c: 21: atomic_store_explicit(&j, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 12: }
[t1] fib_bench.c: 8: for (int k = 0; k < NUM; k++) {
[t1] fib_bench.c: 9: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t1] fib_bench.c: 10: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t2] fib_bench.c: 22: }
[t2] fib_bench.c: 18: for (int k = 0; k < NUM; k++) {
[t2] fib_bench.c: 19: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t2] fib_bench.c: 20: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t2] fib_bench.c: 21: atomic_store_explicit(&j, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t1] fib_bench.c: 12: }
[t1] fib_bench.c: 8: for (int k = 0; k < NUM; k++) {
[t1] fib_bench.c: 9: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t1] fib_bench.c: 10: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t1] fib_bench.c: 11: atomic_store_explicit(&i, prevI + prevJ, memory_order_relaxed);
[t2] fib_bench.c: 22: }
[t2] fib_bench.c: 18: for (int k = 0; k < NUM; k++) {
[t2] fib_bench.c: 19: int prevI = atomic_load_explicit(&i, memory_order_relaxed);
[t2] fib_bench.c: 20: int prevJ = atomic_load_explicit(&j, memory_order_relaxed);
[t2] fib_bench.c: 21: atomic_store_explicit(&j, prevI + prevJ, memory_order_relaxed);
[t3] fib_bench.c: 29: atomic_load_explicit(&j, memory_order_relaxed) >= 144)
Assertion violation: 0
Number of complete executions explored: 344341
