Error detected: Safety violation!
Event (2, 4) in graph:
Thread 0:
	(0, 0): B
	(0, 1): TC [forks 1]
	(0, 2): TC [forks 2]
	(0, 3): E
Thread 1:
	(1, 0): B
	(1, 1): Wrlx 1
	(1, 2): Rrlx [INIT]
	(1, 3): Wrlx 0
	(1, 4): Rrlx [(1, 3)]
	(1, 5): E
Thread 2:
	(2, 0): B
	(2, 1): Wrlx 1
	(2, 2): Rrlx [INIT]
	(2, 3): Wrlx 1
	(2, 4): Rrlx [(1, 3)]
Thread sizes:
	4 6 5 

Trace to (2, 4):
[main] dekker_rlx1.c: 12: if (pthread_create(&t2, NULL, thread_two, NULL))
[main] dekker_rlx1.c: 14: if (pthread_create(&t1, NULL, thread_one, NULL))
[thread_one] dekker_rlx.c: 7: atomic_store_explicit(&y, 1, memory_order_relaxed);
[thread_one] dekker_rlx.c: 8: if (!atomic_load_explicit(&x, memory_order_relaxed)) {
[thread_one] dekker_rlx.c: 9: atomic_store_explicit(&c, 1, memory_order_relaxed);
[thread_two] dekker_rlx.c: 17: atomic_store_explicit(&x, 1, memory_order_relaxed);
[thread_two] dekker_rlx.c: 18: if (!atomic_load_explicit(&y, memory_order_relaxed)) {
[thread_two] dekker_rlx.c: 19: atomic_store_explicit(&c, 0, memory_order_relaxed);
[thread_one] dekker_rlx.c: 10: assert(atomic_load_explicit(&c, memory_order_relaxed) == 1);
Assertion violation: atomic_load_explicit(&c, memory_order_relaxed) == 1
Number of complete executions explored: 0
