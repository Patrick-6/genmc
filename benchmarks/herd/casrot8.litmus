C casrot/8

{ [x] = 0; [zero] = 0; [one] = 1; [two] = 2;
  [three] = 3; [four] = 4; [five] = 5;
  [six] = 6; [seven] = 7; }

P0 (atomic_int *x, volatile int *zero)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, zero, 1, memory_order_relaxed,
							    	     memory_order_relaxed);
}

P1 (atomic_int *x, volatile int *one)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, one, 2, memory_order_relaxed,
							    	    memory_order_relaxed);
}

P2 (atomic_int *x, volatile int *two)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, two, 3, memory_order_relaxed,
							    	    memory_order_relaxed);
}

P3 (atomic_int *x, volatile int *three)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, three, 4, memory_order_relaxed,
							    	      memory_order_relaxed);
}

P4 (atomic_int *x, volatile int *four)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, four, 5, memory_order_relaxed,
							    	     memory_order_relaxed);
}

P5 (atomic_int *x, volatile int *five)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, five, 6, memory_order_relaxed,
							    	     memory_order_relaxed);
}

P6 (atomic_int *x, volatile int *six)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, six, 7, memory_order_relaxed,
							    	    memory_order_relaxed);
}

P7 (atomic_int *x, volatile int *seven)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, seven, 8, memory_order_relaxed,
							    	      memory_order_relaxed);
}