C casrot/4

{ [x] = 0; [zero] = 0; [one] = 1; [two] = 2; [three] = 3; }

P0 (atomic_int *x, volatile int *zero)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, zero, 1, memory_order_relaxed,
							    	     memory_order_relaxed);
}

P1 (atomic_int *x, volatile int *one)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, one, 2, memory_order_relaxed,
							    	    memory_order_relaxed);
}

P2 (atomic_int *x, volatile int *two)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, two, 3, memory_order_relaxed,
							    	    memory_order_relaxed);
}

P3 (atomic_int *x, volatile int *three)
{
	int r1 = atomic_compare_exchange_strong_explicit(x, three, 4, memory_order_relaxed,
							    	      memory_order_relaxed);
}